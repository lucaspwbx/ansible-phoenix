---
# tasks
- name: install essential packages
  apt: pkg={{ item}} update_cache=yes cache_valid_time=3600
  become: true
  become_method: sudo
  with_items:
    - build-essential
    - libncurses5-dev
    - libssl-dev
    - fop
    - xsltproc
    - unixodbc-dev
    - postgresql
    - postgresql-contrib
    - npm
    - libpq-dev
    - python-psycopg2

- name: check if node source is downloaded
  shell: ls /tmp/node-v{{ node_version }}-{{ node_platform }}.tar.xz
  register: node_downloaded
  ignore_errors: yes

- name: check if elixir source is downloaded
  shell: ls /tmp/otp_src_{{ erlang_version }}.tar.gz
  register: erlang_downloaded
  ignore_errors: yes

- name: check if elixir source is downloaded
  shell: ls /tmp/elixir-{{ elixir_version }}.tar.gz
  register: elixir_downloaded
  ignore_errors: yes

- name: download node src
  get_url:
    url: "{{ node_src }}"
    dest: "{{ download_path }}"
  when: node_downloaded|failed

- name: download erlang src
  get_url:
    url: "{{ erlang_src }}"
    dest: "{{ download_path }}"
  when: erlang_downloaded|failed

- name: download elixir src
  get_url:
    url: "{{ elixir_src }}"
    dest: "{{ download_path }}"
  when: elixir_downloaded|failed

- name: check if node source is unarchived
  shell: ls /tmp/node-v{{ node_version }}-{{ node_platform }}
  register: node_unarchived
  ignore_errors: yes

- name: check if erlang source is unarchived
  shell: ls /tmp/otp_src_{{ erlang_version }}
  register: erlang_unarchived
  ignore_errors: yes

- name: check if elixir source is unarchived
  shell: ls /tmp/elixir-{{ elixir_version }}
  register: elixir_unarchived
  ignore_errors: yes

- name: unarchive nodejs
  command: tar -xvf node-v7.1.0-linux-x64.tar.xz
  args:
    chdir: /tmp
  register: node_unarchived
  when: node_unarchived|failed

- name: unarchive erlang
  command: tar -xvf otp_src_19.1.tar.gz 
  args:
    chdir: /tmp
  register: erlang_unarchived
  when: erlang_unarchived|failed

- name: unarchive elixir
  command: tar -xvf elixir-1.3.4.tar.gz
  args:
    chdir: /tmp
  register: elixir_unarchived
  when: elixir_unarchived|failed

- name: add nodejs symlinks
  become: true
  become_method: sudo
  file:
    src: /tmp/node-v7.1.0-linux-x64/bin/{{ item }}
    dest: /usr/bin/{{ item }}
    state: link
    force: yes
  with_items:
    - node
    - npm
  register: node_symlinked
  when: node_unarchived|success

- name: update npm
  shell: npm install npm@latest -g
  when: node_symlinked|success

- name: check if erlang is installed
  shell: which erl
  register: erlang_installed
  ignore_errors: true

- name: build erlang
  become: true
  become_method: sudo
  shell: "{{ item }}"
  args:
    chdir: /tmp/otp_src_{{ erlang_version }}
  with_items:
    - ./configure --prefix=/usr/local
    - make
    - make install
  when: erlang_installed|failed

- name: check if elixir is installed
  shell: elixir -v
  register: elixir_installed
  ignore_errors: true

- name: build elixir
  shell: make
  become: true
  become_method: sudo
  args:
    chdir: /tmp/elixir-{{ elixir_version }}
  environment:
    LC_ALL: "{{ locale }}"
    LANG: "{{ locale }}"
    LANGUAGE: "{{ locale }}"
  when: elixir_installed|failed

- name: add elixir and mix symlinks 
  file:
    src: /tmp/elixir-{{ elixir_version }}/bin/{{ item }}
    dest: /usr/bin/{{ item }}
    state: link
    force: yes
  with_items:
    - elixir
    - mix
  become: true
  become_method: sudo

